HDRMerge - HDR exposure merging software.
Copyright 2012 Javier Celaya
jcelaya@gmail.com

This file is part of HDRMerge.

HDRMerge is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

HDRMerge is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with HDRMerge. If not, see <http://www.gnu.org/licenses/>.



Installation:

HDRMerge is developed with Qt, libTiff, libpfs and CMake. OpenEXR is
also planned to be supported in the future as an output format. You
will need the development files of these libraries, and CMake version
2.6 or greater.

In brief, the steps to compile and install HDRMerge are:

$ mkdir build
$ cd build
$ cmake ..
$ make
$ sudo make install

You will probably need root access to install HDRMerge to its default
location, in /usr/local/bin



Usage:

HDRMerge is an exposure merging tool. It takes several images with different
exposure value and generates a high dynamic range image. Note that HDRMerge
DOES NOT tone map the HDR result; you must use other software for this, like
Luminance [1] or pfstools [2]. HDRMerge is a free implementation of the
concepts presented by Guillermo Luijk in its program Zero Noise [3]. His
tutorial on the internals of Zero Noise is very useful to understand HDRMerge.
HDRMerge currently only runs on Linux.

Source exposures MUST be 16-bit linear TIFF images, aligned and of same size.
A common way to ensure these conditions is to use dcraw and align_image_stack,
from the hugin project. Having a set of DNG raw pictures, you would proceed as
follows:

dcraw -T -4 -w -q 3 -m 1 -v *.dng
align_image_stack -a foo *.tiff

The resulting images foo0000.tif, foo0001.tif... are prepared to be used by
HDRMerge. In the future, these raw processing and alignment steps are planned
to be included in HDRMerge.

Source exposures can be loaded from the Open option in the File menu, or just
passed as arguments in the command line.

Once the source exposures are loaded, the interface presents you with a
preview of the result, and some tools to tune it. The default tool is the pan
and zoom one. Yo can pan the preview by dragging it with the left mouse button
and zoom in and out with the mouse wheel. The maximum zoom is 100%,
the minimum is to fill the preview area, and each step is a 2x zoom.

The parameters to tune each source exposure are accessible under the preview
area. Exposures are sorted by absolute EV, so that the first one is that with
lowest value. You can tune two parameters: the relative EV and the threshold.
The relative EV parameter of an exposure is the ratio between an exposure EV
(in linear terms, not logarithmic) and the next. For instance, when source
exposures are taken with 2EV steps (that is, four times the amount of light),
relative EV should be around 0.25. This factor is calculated by HDRMerge, so
it is very rarely changed by the user. The threshold states wich values are
considered as a pixel being saturated, with a scale from 0 to 255. HDRMerge
ignores saturated pixels from each exposure. Usually, the default value of 254
is ok, but sometimes a lower value is needed. The last exposure cannot be
tunned, as it has no relative EV and the threshold must be 255.

Once the preview is satisfactory, the Save HDR option of the File menu
generates the HDR file. Currently, only PFS streams are supported as output
format.

There are two more tools in the lower left corner. These tools add or remove
pixels from the current exposure ignoring its threshold. Their purpose is to
remove "ghosts" from the result. That is, objects that appear only in some of
the source exposures. This functionality is still experimental.


[1] http://qtpfsgui.sourceforge.net/
[2] http://pfstools.sourceforge.net/pfstmo.html
[3] http://www.guillermoluijk.com/tutorial/zeronoise/index.html
